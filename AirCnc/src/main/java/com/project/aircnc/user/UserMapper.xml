<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.aircnc.user.UserMapper">
	
	<select id="checkEmail" parameterType="TUserVO" resultType="int">
		SELECT EXISTS(
			SELECT *
			FROM t_user
			WHERE e_mail = #{e_mail}
		)
	</select>
	
	<insert id="join" parameterType="TUserVO">
		INSERT INTO t_user
		(e_mail, nm, c_pw, salt, bir_day)
		VALUES
		(#{e_mail}, #{nm}, #{c_pw}, #{salt}, #{bir_day})
	</insert>
	
	
	<insert id="insLikeList" parameterType="UserLListVO">
		INSERT INTO user_l_list
		(i_user,list_title)
		VALUES(#{i_user},#{list_title})
		
		 <selectKey resultType="integer" keyProperty="i_list" order="AFTER" >
        	SELECT LAST_INSERT_ID()
  		 </selectKey>       
	</insert>
	
	<insert id="insLikeUser" parameterType="UserLikeVO">
		INSERT INTO user_like
		(i_host, i_user, i_list)
		VALUES(#{i_host},#{i_user},#{i_list})    
	</insert>
	
	<select id="login" parameterType="TUserVO" resultType="TUserVO">
		SELECT i_user,nm,bir_day,pro_img,ph,e_mail, c_pw, salt 
		FROM t_user
		WHERE e_mail = #{e_mail}
	</select>
	
	<select id="selTUserVO" parameterType="TUserVO" resultType="TUserVO">
		SELECT i_user,nm,bir_day,pro_img,ph,e_mail, c_pw, salt 
		FROM t_user
		WHERE 	e_mail	= #{e_mail}
		AND 	C_PW	= #{c_pw}
	</select>
	
	<update id="upUserPro" parameterType="TUserVO">
		UPDATE t_user
		SET PRO_IMG = #{pro_img, jdbcType=VARCHAR},
		M_DT = NOW()
		WHERE I_USER = #{i_user}
	</update>
	
	<update id="upUserVO" parameterType="TUserVO">
		UPDATE t_user
		<if test="key == 'nm'">
			SET NM = #{nm}
		</if>
		<if test="key == 'ph'">
			SET PH	= #{ph}
		</if>
		<if test="key == 'bir_day'">
			SET BIR_DAY = #{bir_day}
		</if>
		<if test="key == 'email'">
			SET e_mail = #{e_mail}
		</if>
		WHERE I_USER = #{i_user}
	</update>
	
	<update id="upUserPW" parameterType="TUserVO">
		UPDATE t_user
		SET	C_PW = #{c_pw},
			SALT = #{salt},
			m_dt = NOW()
		WHERE I_USER = #{i_user}
	</update>
	
	<delete id="delLikeUser" parameterType="UserLikeVO">
		DELETE 
		FROM user_like
		WHERE I_USER = #{i_user}
		AND I_HOST = #{i_host}
	</delete>
	
	<select id="selUserMd" parameterType="TUserVO" resultType="TUserVO">
		SELECT DATE_FORMAT(m_dt,'%Y년 %m월 %d일') AS m_dt
		FROM t_user
		WHERE i_user = #{i_user}
	</select>
	
	<select id="selUsePro" parameterType="TUserVO" resultType="UserShowVO">
		SELECT DATE_FORMAT(r_dt,'%Y') AS join_date, IFNULL(e_mail,NULL) as emailConfirm,IFNULL(ph,NULL) AS phConfirm, ifnull(b.count,0) AS count
		FROM t_user a
		left JOIN (
		SELECT i_user,COUNT(*) as count
		FROM host_review
		GROUP BY i_user
		) b
		ON a.i_user = b.i_user
		WHERE a.i_user = #{i_user}
	</select>
	
	<select id="writeReview" parameterType="TUserVO" resultType="RsvVO">
		 <![CDATA[
		SELECT  if(ROW_NUMBER() OVER () < 10,CONCAT('0',ROW_NUMBER() OVER ()), ROW_NUMBER() OVER ()) AS row_num, a.I_HOST,a.i_reser,a.i_user,
			b.ROOM_TITLE, c.NM, b.ADDR, a.check_in AS chin , a.check_out AS chout, a.GEST_QTY AS qty
		FROM user_reser a
		INNER JOIN host_user b
		ON a.i_host = b.i_host
		INNER JOIN t_user c
		ON b.i_user = c.i_user
		INNER JOIN (
			SELECT i_host, img_url
			FROM rooms_img
			GROUP BY i_host
		) d
		ON b.I_HOST = d.i_host
		LEFT JOIN host_review e
		ON a.i_reser = e.i_reser
		AND a.I_HOST = e.i_host
		WHERE a.i_user = #{i_user}
		AND a.check_out < DATE_FORMAT(NOW(),'%Y-%m-%d')
		AND e.I_CONTENTS IS null
		]]>
	</select>
	
	<select id="beWriteReview" parameterType="TUserVO" resultType="ProfitReviewVO">
		SELECT STRAIGHT_JOIN A.I_CONTENTS , A.I_HOST, A.I_RESER, A.I_USER, C.NM,
		B.ROOM_TITLE , D.IMG_URL, C.PRO_IMG, A.CONTENTS, A.evaluate_val , DATE_FORMAT(a.M_DT,'%Y년 %m월') AS M_DT
		FROM host_review A
		INNER JOIN host_user B
		ON A.I_HOST = B.I_HOST
		INNER JOIN t_user C
		ON A.I_USER = C.I_USER
		INNER JOIN (
		SELECT I_HOST , IMG_URL
		FROM rooms_img
		GROUP BY I_HOST
		)D
		ON B.I_HOST = D.I_HOST 
		WHERE A.I_USER = #{i_user}
		ORDER BY A.M_DT DESC
	</select>
	
	<update id="upUserReview" parameterType="ProfitReviewVO" >
		UPDATE host_review
		SET contents = #{contents},
		evaluate_val = #{evaluate_val},
		m_dt = NOW()
		WHERE	i_contents 	= #{i_contents}
		AND 	i_user 		= #{i_user} 
	</update>
	
	<insert id="insUserReview" parameterType="ProfitReviewVO">
		INSERT INTO host_review
		(i_host,i_reser,i_user,contents,evaluate_val)
		VALUES(#{i_host}, #{i_reser}, #{i_user}, #{contents}, #{evaluate_val})
		
		<selectKey resultType="integer" keyProperty="i_contents" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey> 
	</insert>
	
	<select id="selUserReview" parameterType="ProfitReviewVO" resultType="ProfitReviewVO">
		SELECT STRAIGHT_JOIN A.I_CONTENTS , A.I_HOST, A.I_RESER, A.I_USER, C.NM,
		B.ROOM_TITLE , D.IMG_URL, C.PRO_IMG, A.CONTENTS, A.evaluate_val , DATE_FORMAT(a.M_DT,'%Y년 %m월') AS M_DT
		FROM host_review A
		INNER JOIN host_user B
		ON A.I_HOST = B.I_HOST
		INNER JOIN t_user C
		ON A.I_USER = C.I_USER
		INNER JOIN (
		SELECT I_HOST , IMG_URL
		FROM rooms_img
		GROUP BY I_HOST
		)D
		ON B.I_HOST = D.I_HOST 
		WHERE A.I_USER = #{i_user}
		AND A.I_CONTENTS = #{i_contents}
	</select>
	
</mapper>